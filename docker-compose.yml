version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: gamehub-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: gamehub123
      MONGO_INITDB_DATABASE: gamehub_pro
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - gamehub-network

  # Redis Cache (optional, for session management)
  redis:
    image: redis:7-alpine
    container_name: gamehub-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - gamehub-network

  # Backend API
  backend:
    build: 
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: gamehub-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_URL=mongodb://admin:gamehub123@mongodb:27017/gamehub_pro?authSource=admin
      - DB_NAME=gamehub_pro
      - SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:3000
      - BACKEND_URL=http://localhost:8000
    volumes:
      - ./backend:/app/backend
      - backend_uploads:/app/backend/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - gamehub-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: gamehub-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8000
      - GENERATE_SOURCEMAP=false
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    depends_on:
      - backend
    networks:
      - gamehub-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: gamehub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - gamehub-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  nginx_logs:
    driver: local

networks:
  gamehub-network:
    driver: bridge